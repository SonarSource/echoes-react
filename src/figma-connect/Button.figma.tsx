/*
 * Echoes React
 * Copyright (C) 2023-2025 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
import { Button } from "../components/buttons/Button"
import figma from "@figma/code-connect"

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Button,
  "https://www.figma.com/design/3bo9DCW9JD52Lc21Fcyea8/-0.22.0-Echoes--Components?node-id=3562%3A8192",
  {
    props: {
      prefix: figma.boolean("hasPrefix",{
        true: figma.instance('↳ prefix'),
        false: undefined,
      }),
      suffix: figma.boolean("hasSuffix",{
        true: figma.instance('↳ suffix'),
        false: undefined,
      }),
      label: figma.string("label"),
      isLoading: figma.boolean("isLoading"),
      variety: figma.enum("variety", {
        primary: "primary",
        default: "default",
        danger: "danger",
        "danger secondary": "danger-secondary",
        "primary ghost": "primary-ghost",
        "default ghost": "default-ghost",
        "danger ghost": "danger-ghost",
      }),
      size: figma.enum("size", {
        medium: "medium",
        large: "large",
      }),
    },

    example: (props) => 
      <Button
        isLoading={props.isLoading}
        prefix={props.prefix}
        size={props.size}
        suffix={props.suffix}
        variety={props.variety}
      >
        {props.label}
      </Button>,
  },
)
