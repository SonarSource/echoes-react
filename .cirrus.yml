env:
  CIRRUS_CLONE_DEPTH: '20'
  CIRRUS_SHELL: bash
  ARTIFACTORY_URL: https://repox.jfrog.io/artifactory
  ARTIFACTORY_DEPLOY_REPO: sonarsource-npm-public-qa

eks_container_definition: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:node20-yarn2.4.3
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  region: eu-central-1
  namespace: default
  docker_arguments:
    CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}

yarn_cache_template: &YARN_CACHE_TEMPLATE
  yarn_cache:
    folder: '.yarn'
    fingerprint_script: cat yarn.lock

build_task:
  auto_cancellation: $CIRRUS_BRANCH != 'master' && $CIRRUS_BRANCH != 'stable'
  <<: *YARN_CACHE_TEMPLATE
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 8
    memory: 10G
  env:
    ARTIFACTORY_DEPLOY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    DEPLOY_PULL_REQUEST: 'true' # Deploy or not PR builds to Repox
    # (reminder: PRs builds goes to sonarsource-npm-public-dev / long living branches sonarsource-npm-public-builds)
  build_script:
    - source cirrus-env BUILD
    - yarn_build_deploy_analyze

promote_task:
  depends_on:
    - build
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    ARTIFACTORY_PROMOTE_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
    GITHUB_TOKEN: VAULT[development/github/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promotion token]
  script:
    - source cirrus-env PROMOTE
    - cirrus_promote_npm

mend_scan_task:
  only_if: $CIRRUS_BRANCH == "main" || $CIRRUS_BRANCH =~ "branch-.*"
  timeout_in: 30m
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 4Gb
  env:
    WS_APIKEY: VAULT[development/kv/data/mend data.apikey]
    WS_WSS_URL: VAULT[development/kv/data/mend data.url]
    WS_USERKEY: VAULT[development/kv/data/mend data.userKey]
  mend_script:
    - .cirrus/cirrus-mend-scan.sh
  allow_failures: 'true'
  always:
    ws_artifacts:
      path: 'whitesource/**/*'

sonar_shadow_scan_sqc_eu_task:
  # only_if: $CIRRUS_CRON == "daily"
  <<: *YARN_CACHE_TEMPLATE
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 8
    memory: 10G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/sonarcloud data.token]
    SONAR_HOST_URL: 'https://sonarcloud.io'

    ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa
    ARTIFACTORY_DEPLOY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]

  build_script:
    - source cirrus-env BUILD-PRIVATE
    - yarn_build_deploy_analyze

sonar_shadow_scan_sqc_us_task:
  # only_if: $CIRRUS_CRON == "daily"
  <<: *YARN_CACHE_TEMPLATE
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 8
    memory: 10G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/sonarqube-us data.token]
    SONAR_HOST_URL: 'https://sonarqube.us'
    SONAR_SCANNER_JSON_PARAMS: '{"sonar.region":"us"}'

    ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa
    ARTIFACTORY_DEPLOY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]

  build_script:
    - source cirrus-env BUILD-PRIVATE
    - yarn_build_deploy_analyze

run_iris_task:
  eks_container:
    <<: *CONTAINER_DEFINITION
  depends_on:
    - sonar_shadow_scan_sqc_us
    - sonar_shadow_scan_sqc_eu
  env:
    SONAR_SQC_EU_URL: 'https://sonarcloud.io'
    SONAR_IRIS_SQC_EU_TOKEN: VAULT[development/kv/data/iris data.sqc-eu]
    SONAR_SQC_US_URL: 'https://sonarqube.us'
    SONAR_IRIS_SQC_US_TOKEN: VAULT[development/kv/data/iris data.sqc-us]
    SONAR_NEXT_URL: 'https://next.sonarqube.com/sonarqube'
    SONAR_IRIS_NEXT_TOKEN: VAULT[development/kv/data/iris data.next]
    ARTIFACTORY_URL: VAULT[development/kv/data/repox data.artifactory_url]
    ARTIFACTORY_USER: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
    ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  script:
    - source .cirrus/run-iris.sh
